{\rtf1\ansi\ansicpg1252\cocoartf2578
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\margl1440\margr1440\vieww11520\viewh8400\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs24 \cf0 #include "standcl.h"\
\
//\uc0\u1082 \u1086 \u1084 \u1087 \u1072 \u1088 \u1072 \u1090 \u1086 \u1088  \u1087 \u1088 \u1086 \u1080 \u1079 \u1074 \u1077 \u1076 \u1077 \u1085 \u1080 \u1103  \u1076 \u1083 \u1080 \u1085  \u1089 \u1083 \u1086 \u1074  \u1074  \u1090 \u1077 \u1082 \u1089 \u1090 \u1077 \
int compar(const void *ptr1, const void *ptr2) \{\
     long int p1 = ((sentense_s *)ptr1)->prod;\
     long int p2 = ((sentense_s *)ptr2)->prod;\
     if (p1 == p2)\
        return 0;\
    else\
        if (p1 > p2)\
            return 1;\
        else\
            return -1;\
\}\
\
//\uc0\u1089 \u1095 \u1080 \u1090 \u1072 \u1077 \u1084  \u1087 \u1088 \u1086 \u1080 \u1079 \u1074 \u1077 \u1076 \u1077 \u1085 \u1080 \u1077  \u1082 \u1072 \u1078 \u1076 \u1086 \u1075 \u1086  \u1087 \u1088 \u1077 \u1076 \u1083 \u1086 \u1078 \u1077 \u1085 \u1080 \u1103 \
void count_prod(text_s *text)\{\
    int i, j;\
    for (i = 0; i < text->quant; i++)\{\
        text->sent[i].prod = 1;\
        for (j = 0; j < text->sent[i].count_words; j++)\{\
            if (wcslen(text->sent[i].splword[j]) != 0)\
                text->sent[i].prod *= wcslen(text->sent[i].splword[j]);\
        \}\
    \}\
\}\
\
//\uc0\u1089 \u1086 \u1088 \u1090 \u1080 \u1088 \u1091 \u1077 \u1084  \u1087 \u1088 \u1077 \u1076 \u1083 \u1086 \u1078 \u1077 \u1085 \u1080 \u1103 \
void sort_sent(text_s *text)\{\
    count_prod(text);\
    qsort(text->sent, text->quant, sizeof(text->sent[0]), compar);\
\}\
}